{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","toUpperCase","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5f94cd1.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return(\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n\r\n  state = {\r\n    term: ''\r\n  }\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({term});\r\n    this.props.onSearchChange(term);\r\n  };\r\n  render(){\r\n    return (\r\n      <input type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"type to search\"\r\n                value = {this.state.term}\r\n                onChange = {this.onSearchChange} />\r\n    );   \r\n  }\r\n}\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\n\r\nexport default class TodoListItem  extends Component{\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    render(){\r\n        const { label, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n        if (important){\r\n            classNames += ' important';\r\n        }\r\n        return (\r\n            <span className={ classNames } >\r\n                <span className=\"todo-list-item-label\" onClick = { onToggleDone }>\r\n                    { label }\r\n                </span>\r\n                <button type=\"button\"\r\n                    className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick = { onToggleImportant }>\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n    \r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm float-right\"\r\n                        onClick = {onDeleted}>\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </span>\r\n        );\r\n    }\r\n}","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n    const elements = todos.map((item) => {\r\n        const {id, ...itemProps } = item;\r\n        return(\r\n            <li className = \"list-group-item\" key = { id }>\r\n                <TodoListItem \r\n                   {...itemProps}   \r\n                   onDeleted = {() => onDeleted(id)}\r\n                   onToggleImportant = {() => onToggleImportant(id)}\r\n                   onToggleDone ={() => onToggleDone(id)} />\r\n            </li>            \r\n        )\r\n    });\r\n    return (\r\n        <ul className = \"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component{\r\n\r\n        buttons = [\r\n                { name: 'all', label: 'All'},\r\n                { name: 'active', label: 'Active'},\r\n                { name: 'done', label: 'Done'},\r\n        ];\r\n\r\n        render(){\r\n                const {filter, onFilterChange} = this.props;\r\n                const buttons = this.buttons.map(({name, label}) => {\r\n                        const isActive = filter === name;\r\n                        const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n                        return(\r\n                                <button type='button'\r\n                                        className = {`btn ${clazz}`}\r\n                                        key = {name}\r\n                                        onClick ={() => onFilterChange(name)}>\r\n                                                {label}\r\n                                </button>\r\n                        );\r\n                });\r\n                return (\r\n                        <div className=\"btn-group\">\r\n                                {buttons}\r\n                        </div>\r\n                      );\r\n        }\r\n}\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component{\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value.toUpperCase()\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <form className = 'item-add-form d-flex'\r\n                onSubmit = {this.onSubmit}>\r\n                <input type='text'\r\n                    className='form-control'\r\n                    onChange={this.onLabelChange} \r\n                    placeholder='What needs to be done'\r\n                    value = {this.state.label} />\r\n                <button \r\n                    className ='btn btn-outline-secondary'>\r\n                    Add Item\r\n                    </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    maxId = 100;\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Make Awesome App'),\r\n            this.createTodoItem('Have a lunch')\r\n        ],\r\n        term: '',\r\n        filter: 'all' // active, all, done\r\n    };\r\n    createTodoItem(label){\r\n        return{\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n    deleteItem = (id) =>{\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx+1)];\r\n\r\n            return{\r\n                todoData: newArray\r\n            }\r\n        })\r\n    };\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({todoData}) => {\r\n            let newArr = [...todoData, newItem];\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n        const oldItem = arr[idx];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n        return [\r\n            ...arr.slice(0, idx), newItem, ...arr.slice(idx+1)\r\n        ]\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(( {todoData} ) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(( {todoData} ) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    };\r\n    onFilterChange = (term) => {\r\n        this.setState({term});\r\n    };\r\n    \r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    filter(items, filter){\r\n        switch(filter){\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default: \r\n                return items;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {todoData, term, filter} = this.state;\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData\r\n                            .filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader  toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel d-flex\">\r\n                <SearchPanel\r\n                onSearchChange = {this.onSearchChange} />\r\n                <ItemStatusFilter\r\n                    filter={filter}\r\n                    onFilterChange = {this.onFilterChange} />\r\n                </div>\r\n    \r\n                <TodoList \r\n                todos={visibleItems}\r\n                onDeleted = { this.deleteItem }\r\n                onToggleImportant = {this.onToggleImportant}\r\n                onToggleDone = {this.onToggleDone} />\r\n                <ItemAddForm \r\n                onItemAdded = {this.addItem} />\r\n    \r\n          </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}